int foo(int a, bool t) {
    if(t) {
        print(a ++ "\n")
        return -1 * a
    }
    else {
        print("not "++a++"\n")
        return 2*a
    }
}

int(int, bool) fooF

fooF = foo

print(fooF(4, true)++"\n");
print(fooF(8, false)++"\n");

bool(int?) barF

bool bar(int? a) {
    a = a * a
    return true
}

barF = bar
int? a = 7
print(barF(a)++"\n"++a++"\n")
int nma = 7
print(barF(nma)++"\n"++nma++"\n")
print(barF(8)++"\n")

void p(int(int, bool) f, int v) {
    print(f(v, false)++"\n");
}

p(foo, 3)

void(int(int, bool), int) getP() {
    return p
}

void(int(int, bool), int) pPtr
pPtr = getP()
pPtr(foo, 10)

bool isBig(int? a, bool warn) {
    if(a != none) {
        return a > 100 
    }
    if(warn) print("is none")
    return false
}

bool(int?, bool) funIsBig
funIsBig = isBig

print(funIsBig(4, false) ++ "\n")

bool custom_reporting = true

void err_print(string s) {
    print("Error: "++s++"\n")
}

void report(void(string) rep_fun, string msg) {
    if(custom_reporting) rep_fun(msg)
    else print(msg)
}

report(err_print, "Oops!")
custom_reporting = false
report(err_print, "Oh, no!\n")